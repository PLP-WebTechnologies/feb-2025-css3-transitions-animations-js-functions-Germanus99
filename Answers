1. HTML (index.html)

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Interactive Animation Demo</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <h1>Welcome to the Interactive Page</h1>
  
  <div id="box">🎁</div>

  <label for="colorInput">Choose Your Box Color:</label>
  <input type="color" id="colorInput">

  <button id="animateBtn">Animate the Box!</button>

  <script src="script.js"></script>
</body>
</html>


2. CSS (styles.css)

body {
  text-align: center;
  font-family: Arial, sans-serif;
  margin-top: 50px;
}

#box {
  width: 150px;
  height: 150px;
  background-color: #f39c12;
  margin: 20px auto;
  font-size: 3rem;
  line-height: 150px;
  transition: background-color 0.5s ease;
}

@keyframes pop {
  0% { transform: scale(1); }
  50% { transform: scale(1.2) rotate(10deg); }
  100% { transform: scale(1); }
}

.animate {
  animation: pop 0.5s ease;
}



3. JavaScript (script.js)

const box = document.getElementById('box');
const colorInput = document.getElementById('colorInput');
const animateBtn = document.getElementById('animateBtn');

// Load saved color from localStorage
const savedColor = localStorage.getItem('boxColor');
if (savedColor) {
  box.style.backgroundColor = savedColor;
  colorInput.value = savedColor;
}

// Store chosen color in localStorage and apply it
colorInput.addEventListener('input', () => {
  const color = colorInput.value;
  box.style.backgroundColor = color;
  localStorage.setItem('boxColor', color);
});

// Trigger CSS animation
animateBtn.addEventListener('click', () => {
  box.classList.add('animate');

  // Remove class after animation ends to allow retriggering
  box.addEventListener('animationend', () => {
    box.classList.remove('animate');
  }, { once: true });
});
